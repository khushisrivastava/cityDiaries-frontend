{"version":3,"sources":["../node_modules/@material-ui/core/esm/Paper/Paper.js","Components/SelectTab.js","../node_modules/@material-ui/core/esm/Grid/Grid.js"],"names":["Paper","React","props","ref","classes","className","_props$component","component","Component","_props$square","square","_props$elevation","elevation","_props$variant","variant","other","_objectWithoutProperties","_extends","clsx","root","outlined","concat","rounded","withStyles","theme","elevations","shadows","forEach","shadow","index","boxShadow","backgroundColor","palette","background","paper","color","text","primary","transition","transitions","create","borderRadius","shape","border","divider","name","useStyles","makeStyles","selectedPaper","height","width","marginTop","spacing","textAlign","selectedPaper1","borderTopLeftRadius","borderBottomLeftRadius","paper1","selectedPaper2","borderTopRightRadius","borderBottomRightRadius","paper2","grid","marginBottom","gridItem","margin","styles","cards","SelectTab","type","onTypeChange","style","view","item","container","justify","onClick","position","top","fontSize","SPACINGS","GRID_SIZES","getOffset","val","div","arguments","length","undefined","parse","parseFloat","String","replace","Grid","_props$alignContent","alignContent","_props$alignItems","alignItems","classNameProp","_props$container","_props$direction","direction","_props$item","_props$justify","_props$lg","lg","_props$md","md","_props$sm","sm","_props$spacing","_props$wrap","wrap","_props$xl","xl","_props$xs","xs","_props$zeroMinWidth","zeroMinWidth","StyledGrid","boxSizing","display","flexWrap","minWidth","flexDirection","justifyContent","breakpoint","themeSpacing","padding","generateGutter","breakpoints","keys","reduce","accumulator","key","globalStyles","size","Math","round","flexBasis","flexGrow","maxWidth","up","generateGrid"],"mappings":"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","file":"static/js/35.ffad768b.chunk.js","sourcesContent":["import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  var elevations = {};\n  theme.shadows.forEach(function (shadow, index) {\n    elevations[\"elevation\".concat(index)] = {\n      boxShadow: shadow\n    };\n  });\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {\n      backgroundColor: theme.palette.background.paper,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create('box-shadow')\n    },\n\n    /* Styles applied to the root element if `square={false}`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      border: \"1px solid \".concat(theme.palette.divider)\n    }\n  }, elevations);\n};\nvar Paper = /*#__PURE__*/React.forwardRef(function Paper(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$square = props.square,\n      square = _props$square === void 0 ? false : _props$square,\n      _props$elevation = props.elevation,\n      elevation = _props$elevation === void 0 ? 1 : _props$elevation,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'elevation' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"square\", \"elevation\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant === 'outlined' ? classes.outlined : classes[\"elevation\".concat(elevation)], !square && classes.rounded),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Paper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Shadow depth, corresponds to `dp` in the spec.\n   * It accepts values between 0 and 24 inclusive.\n   */\n  elevation: chainPropTypes(PropTypes.number, function (props) {\n    var classes = props.classes,\n        elevation = props.elevation; // in case `withStyles` fails to inject we don't need this warning\n\n    if (classes === undefined) {\n      return null;\n    }\n\n    if (elevation != null && classes[\"elevation\".concat(elevation)] === undefined) {\n      return new Error(\"Material-UI: This elevation `\".concat(elevation, \"` is not implemented.\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * If `true`, rounded corners are disabled.\n   */\n  square: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['elevation', 'outlined'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiPaper'\n})(Paper);","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    selectedPaper: {\n        height: 35,\n        width: 100,\n        marginTop: theme.spacing(8),\n        textAlign: \"center\",\n        backgroundColor: \"#000000\",\n        color: \"white\"\n    },\n    paper: {\n        height: 35,\n        width: 100,\n        marginTop: theme.spacing(8),\n        textAlign: \"center\",\n        backgroundColor: \"#E5E5E54D\"\n    },\n    selectedPaper1: {\n        height: 35,\n        width: 100,\n        marginTop: theme.spacing(8),\n        textAlign: \"center\",\n        borderTopLeftRadius: 20,\n        borderBottomLeftRadius: 20,\n        backgroundColor: \"#000000\",\n        color: \"white\"\n    },\n    paper1: {\n        height: 35,\n        width: 100,\n        marginTop: theme.spacing(8),\n        textAlign: \"center\",\n        borderTopLeftRadius: 20,\n        borderBottomLeftRadius: 20,\n        backgroundColor: \"#E5E5E54D\"\n    },\n    selectedPaper2: {\n        height: 35,\n        width: 100,\n        marginTop: theme.spacing(8),\n        textAlign: \"center\",\n        borderTopRightRadius: 20,\n        borderBottomRightRadius: 20,\n        backgroundColor: \"#000000\",\n        color: \"white\"\n    },\n    paper2: {\n        height: 35,\n        width: 100,\n        marginTop: theme.spacing(8),\n        textAlign: \"center\",\n        borderTopRightRadius: 20,\n        borderBottomRightRadius: 20,\n        backgroundColor: \"#E5E5E54D\",\n        borderRadius: 0\n    },\n    grid: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(3)\n    },\n    gridItem: {\n        margin: 0\n    }\n}));\n\nconst styles = {\n    cards: {\n        marginBottom: \"60px\",\n    }\n}\n\n\n\nfunction SelectTab(props) {\n    const classes = useStyles();\n    const { type, onTypeChange } = props;\n\n    return (\n        <div style={styles.view}>\n            <Grid item>\n                <Grid container justify=\"center\" className={classes.grid}>\n                    <Grid item className={classes.gridItem}>\n                        <Paper className={type === \"restaurant\" ? classes.selectedPaper1 : classes.paper1} onClick={\n                            () => {\n                                onTypeChange(\"restaurant\")\n                            }}>\n                            <Typography style={{ position: \"relative\", top: 8, fontSize: 13 }}>Restaurants</Typography>\n                        </Paper>\n                    </Grid>\n                    <Grid item className={classes.gridItem}>\n                        <Paper className={type === \"gym\" ? classes.selectedPaper : classes.paper} onClick={\n                            () => {\n                                onTypeChange(\"gym\")\n                            }}>\n                            <Typography style={{ position: \"relative\", top: 8, fontSize: 13 }}>Gyms</Typography>\n                        </Paper>\n                    </Grid>\n                    <Grid item className={classes.gridItem}>\n                        <Paper className={type === \"lodging\" ? classes.selectedPaper2 : classes.paper2} onClick={\n                            () => {\n                                onTypeChange(\"lodging\")\n                            }\n                        }>\n                            <Typography style={{ position: \"relative\", top: 8, fontSize: 13 }}>Hotels</Typography>\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default SelectTab;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"row-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"center\"`. */\n    'justify-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justify=\"flex-end\"`. */\n    'justify-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-between\"`. */\n    'justify-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-around\"`. */\n    'justify-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n    'justify-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = /*#__PURE__*/React.forwardRef(function Grid(props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      _props$justify = props.justify,\n      justify = _props$justify === void 0 ? 'flex-start' : _props$justify,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], justify !== 'flex-start' && classes[\"justify-xs-\".concat(String(justify))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: PropTypes.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justify: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: PropTypes.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;"],"sourceRoot":""}