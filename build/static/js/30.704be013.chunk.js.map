{"version":3,"sources":["Default/colorStyles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","Redux/Thunks/placesThunks.js","Redux/Thunks/index.js","Redux/Thunks/favouriteThunks.js","Redux/Thunks/reviewThunk.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@material-ui/core/esm/styles/makeStyles.js","Pages/HomePage.js","Default/mapApiKey.js"],"names":["colorStyles","defaultGreen","defaultGrey","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","PlacesThunk","params","dispatch","a","startLoading","Axios","get","location","types","name","radius","response","status","setPlaces","data","results","sort","b","rating","console","log","finishLoading","getState","state","query","filteredTemp","places","all","filter","item","toLowerCase","includes","length","setPlacesBySearch","id","place_id","setPlace","result","fetchPlaces","fetchPlaceBySearch","fetchPlacesByTypeChange","fetchPlace","fetchFavorites","mainData","map","is_favourite","setFavourites","createRemoveFavourite","favourites","post","filtered","setFavourite","idx","findIndex","splice","fetchReviews","setReviews","createReview","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","makeStyles","stylesOrCreator","options","undefined","makeStylesWithoutDefault","_extends","defaultTheme","SearchAppBar","lazy","SkeletonStructure","RestaurantCard","BottomNavBar","SelectTab","useStyles","theme","heading","marginTop","marginBottom","textAlign","commenText","display","justifyContent","alignContent","marginLeft","marginRight","color","styles","cards","HomePage","props","classes","useState","filteredSearch","setFilteredSearch","type","setType","typedAddress","setTypedAddress","useLocationContext","latitude","longitude","useDispatch","restaurants","useSelector","loading","useEffect","setSearchQueryResult","_","debounce","getRestaurantsDataOnSearch","getDataOnTypeChange","setSearchQuery","onTypeChange","style","image","photos","apiUrl","photo_reference","icon","address","vicinity","avg_ratings","avg_rating","favPage","width","Typography","className"],"mappings":"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","file":"static/js/30.704be013.chunk.js","sourcesContent":["let colorStyles = {\n    defaultGreen: \"#219A53\",\n    defaultGrey: \"grey\"\n}\n\nexport default colorStyles;","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import {\n    setPlaces,\n    setPlace,\n    startLoading,\n    finishLoading,\n    setPlacesBySearch\n} from '../Slices/index';\nimport Axios from 'axios';\n\nconst fetchPlaces = (params) => async (dispatch) => {\n    dispatch(startLoading());\n    try {\n        const response = await Axios.get(`/maps/places_nearby/?location=${params.location}&types=${params.types}&name=${params.name}&radius=${params.radius}`)\n        if (response.status === 200) {\n            dispatch(setPlaces(response.data.results.sort((a, b) => b.rating - a.rating)));\n        }\n        else {\n            console.log(response.data);\n        }\n    }\n    catch (err) {\n        console.log(err);\n    }\n    dispatch(finishLoading());\n};\n\nconst fetchPlaceBySearch = (params) => async (dispatch, getState) => {\n    dispatch(startLoading());\n    try {\n        const state = getState();\n        let query = params.name;\n        const filteredTemp = state.places.all.filter(item => {\n            return item.name.toLowerCase().includes(query.toLowerCase())\n        });\n        if (filteredTemp.length > 0) {\n            dispatch(setPlacesBySearch(filteredTemp.sort((a, b) => b.rating - a.rating)));\n        }\n        else {\n            const response = await Axios.get(`/maps/places_nearby/?location=${params.location}&types=${params.types}&name=${params.name}&radius=${params.radius}`)\n            if (response.status === 200) {\n                dispatch(setPlacesBySearch(response.data.results.sort((a, b) => b.rating - a.rating)));\n            }\n            else {\n                console.log(response.data);\n            }\n        }\n    }\n    catch (error) {\n        console.log(error);\n    }\n    dispatch(finishLoading());\n}\n\nconst fetchPlace = (id) => async (dispatch, getState) => {\n    dispatch(startLoading());\n    try {\n        //     const state = getState();\n        //     const filteredTemp = state.places.all.filter(item => item.place_id === id);\n        //     if (filteredTemp.length > 0) {\n        //         dispatch(setPlace(filteredTemp[0]));\n        //     }\n        // else {\n        const params = {\n            place_id: id\n        }\n        const response = await Axios.get(`/maps/details/?place_id=${params.place_id}`)\n        if (response.status === 200) {\n            dispatch(setPlace(response.data.result));\n        }\n        else {\n            console.log(response.data);\n        }\n        // }\n    }\n    catch (error) {\n        console.log(error);\n    }\n    dispatch(finishLoading());\n}\n\nconst fetchPlacesByTypeChange = (params) => async (dispatch) => {\n    dispatch(startLoading());\n    try {\n        const response = await Axios.get(`/maps/places_nearby/?location=${params.location}&types=${params.types}&name=&radius=${params.radius}`)\n        if (response.status === 200) {\n            dispatch(setPlaces(response.data.results.sort((a, b) => b.rating - a.rating)));\n        }\n        else {\n            console.log(response.data);\n        }\n    }\n    catch (error) {\n        console.log(error);\n    }\n    dispatch(finishLoading());\n}\n\nexport const PlacesThunk = {\n    fetchPlaces,\n    fetchPlaceBySearch,\n    fetchPlacesByTypeChange,\n    fetchPlace,\n}","import { PlacesThunk } from './placesThunks';\nimport { FavouritesThunk } from './favouriteThunks';\nimport { ReviewThunk } from './reviewThunk';\n\nconst { fetchPlaces, fetchPlaceBySearch, fetchPlacesByTypeChange, fetchPlace } = PlacesThunk;\nconst { fetchFavorites, createRemoveFavourite } = FavouritesThunk;\nconst { fetchReviews, createReview } = ReviewThunk;\n\nexport { fetchPlaces, fetchPlaceBySearch, fetchPlacesByTypeChange, fetchPlace, fetchFavorites, createRemoveFavourite, fetchReviews, createReview };","import {\n    setFavourites,\n    startLoading,\n    finishLoading,\n    setFavourite,\n    // setFavourite\n} from '../Slices/index';\nimport Axios from 'axios';\n\nconst fetchFavorites = () => async (dispatch) => {\n    dispatch(startLoading());\n    try {\n        const response = await Axios.get(\n            `/place/fav_places`\n        )\n        if (response.status === 200) {\n            const data = response.data.sort((a, b) => b.rating - a.rating);\n            const mainData = data.map(item => {\n                return { ...item, is_favourite: true };\n            })\n            dispatch(setFavourites(mainData));\n        }\n        else {\n            console.log(response.data);\n        }\n    }\n    catch (err) {\n        console.log(err);\n    }\n    dispatch(finishLoading());\n};\n\nconst createRemoveFavourite = (params) => async (dispatch, getState) => {\n    // dispatch(startLoading());\n    try {\n        const state = getState();\n        const data = [...state.places.favourites];\n        const response = await Axios.post(\n            `/place/toggle_fav/`, params\n        )\n        const filtered = data.filter(item => item.place_id === params.place_id);\n        if (!params.is_favourite) {\n            params = { ...params, is_favourite: true }\n            dispatch(setFavourite(params));\n        }\n        if (filtered.length > 0) {\n            let idx = data.findIndex(item => item.place_id === params.place_id);\n            data.splice(idx, 1);\n            const mainData = data.map(item => {\n                return { ...item, is_favourite: true };\n            })\n            dispatch(setFavourites(mainData));\n        }\n        else {\n            if (response.status === 200) {\n                // dispatch(setFavourite(params));\n            }\n            else {\n                console.log(response.data);\n            }\n        }\n        // dispatch(finishLoading());\n    }\n    catch (err) {\n        console.log(err);\n    }\n}\n\nexport const FavouritesThunk = {\n    fetchFavorites,\n    createRemoveFavourite\n}","import {\n    startLoading,\n    finishLoading,\n    setReviews,\n    setReview\n} from '../Slices/index';\nimport Axios from 'axios';\n\nconst fetchReviews = () => async (dispatch) => {\n    dispatch(startLoading());\n    try {\n        const response = await Axios.get(\n            `/review/review_list/`\n        )\n        if (response.status === 200) {\n            dispatch(setReviews(response.data.sort((a, b) => b.rating - a.rating)));\n        }\n        else {\n            console.log(response.data);\n        }\n    }\n    catch (err) {\n        console.log(err);\n    }\n    dispatch(finishLoading());\n}\n\nconst createReview = (params) => async (dispatch) => {\n    dispatch(startLoading());\n    try {\n        const response = await Axios.post(\n            `/review/rate_restaurant/`, params\n        );\n        if (response.status === 200) {\n            // dispatch(setReview(params));\n        }\n        else {\n            console.log(response.data);\n        }\n    } catch (err) {\n        console.log(err);\n    }\n    dispatch(finishLoading());\n}\n\nexport const ReviewThunk = {\n    fetchReviews,\n    createReview\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { makeStyles as makeStylesWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nfunction makeStyles(stylesOrCreator) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return makeStylesWithoutDefault(stylesOrCreator, _extends({\n    defaultTheme: defaultTheme\n  }, options));\n}\n\nexport default makeStyles;","import React, { useState, useEffect, lazy, Suspense } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchPlaces, fetchPlaceBySearch, fetchPlacesByTypeChange } from '../Redux/Thunks';\nimport _ from 'lodash';\nimport APIKEY from '../Default/mapApiKey';\nimport { apiUrl } from '../Default/apiUrl';\n\nimport { useLocationContext } from '../Context/LocationContext';\nimport colorStyles from '../Default/colorStyles';\n\nconst SearchAppBar = lazy(() => import('../Components/HomePageAppBar'));\nconst Footer = lazy(() => import('../Components/Footer'));\nconst SkeletonStructure = lazy(() => import('../Components/RestaurantSkeleton'));\nconst RestaurantCard = lazy(() => import('../Components/RestaurantCard'));\nconst BottomNavBar = lazy(() => import('../Components/BottomNavBar'));\nconst SelectTab = lazy(() => import('../Components/SelectTab'));\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    heading: {\n        marginTop: 10,\n        marginBottom: 5,\n        textAlign: \"center\"\n    },\n    commenText: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignContent: \"center\",\n        marginTop: 150,\n        marginLeft: 15,\n        marginRight: 15,\n        color: colorStyles.defaultGrey,\n        textAlign: \"center\"\n    },\n}))\n\n\nfunction HomePage(props) {\n    const classes = useStyles();\n    const [filteredSearch, setFilteredSearch] = useState(false);\n    const [type, setType] = useState(\"restaurant\");\n    const [typedAddress, setTypedAddress] = useState(\"\");\n    const { latitude, longitude, location } = useLocationContext();\n\n\n    const dispatch = useDispatch();\n    const restaurants = useSelector(state => state.places.all);\n    const loading = useSelector(state => state.loading);\n    let filtered = useSelector(state => state.places.filtered);\n\n    useEffect(() => {\n        const params = {\n            location: latitude && longitude ? `${latitude},${longitude}` : \"\",\n            radius: 10000,\n            types: \"restaurant\",\n            name: \"\"\n        }\n\n        dispatch(fetchPlaces(params));\n    }, [latitude, longitude, dispatch])\n\n    const setSearchQueryResult = _.debounce((data) => {\n        setFilteredSearch(true);\n        getRestaurantsDataOnSearch(data);\n    }, 1000);\n\n\n    const getRestaurantsDataOnSearch = (query) => {\n        if (query.length > 0) {\n            const params = {\n                location: latitude && longitude ? `${latitude},${longitude}` : \"\",\n                types: type,\n                name: query,\n                radius: 10000,\n            };\n            dispatch(fetchPlaceBySearch(params));\n        }\n        else {\n            getDataOnTypeChange(type);\n            setFilteredSearch(false);\n        }\n    }\n\n\n    const getDataOnTypeChange = (query) => {\n        setType(query);\n        const params = {\n            location: latitude && longitude ? `${latitude},${longitude}` : \"\",\n            types: query,\n            name: \"\",\n            radius: 10000,\n        }\n        dispatch(fetchPlacesByTypeChange(params));\n        setTypedAddress(\"\");\n        setFilteredSearch(false);\n    }\n\n    const data = filteredSearch ? filtered : restaurants;\n\n    return (\n        <>\n            <Suspense>\n                <SearchAppBar {...props} setTypedAddress={setTypedAddress} typedAddress={typedAddress} setSearchQuery={setSearchQueryResult} />\n            </Suspense>\n            {latitude && longitude ?\n                <>\n                    <SelectTab type={type} onTypeChange={getDataOnTypeChange} />\n                    {/* {!loading ? <Typography variant=\"h5\" component=\"h4\" className={classes.heading}>\n                        {data.length} {type === \"lodging\" ? \"hotels\" : (type + \"s\")} found.\n                    </Typography> : null} */}\n                    <div style={styles.cards}>\n                        {loading && <SkeletonStructure />}\n                        {data.map((item) => {\n                            return <Suspense>\n                                <RestaurantCard\n                                    {...props}\n                                    key={item.place_id}\n                                    place_id={item.place_id}\n                                    image={item.photos ? `${apiUrl}/maps/place_photos?maxwidth=${1000}&photoreference=${item.photos[0].photo_reference}&key=${APIKEY}` : item.icon}\n                                    name={item.name}\n                                    address={item.vicinity}\n                                    value={item.avg_ratings}\n                                    avg_rating={item.avg_ratings}\n                                    icon={item.icon}\n                                    photos={item.photos}\n                                    type={item.type}\n                                    is_favourite={item.is_favourite}\n                                    favPage={false}\n                                />\n                            </Suspense>\n                        })}\n                        {!data.length && restaurants.length > 0 && <h5 style={{ textAlign: \"center\", width: \"85%\", color: \"grey\", marginLeft: \"auto\", marginRight: \"auto\" }}>Your current location is set to {location}. Consider changing it to look for hygienic places nearby</h5>}\n                        <Suspense>\n                            {/* <Footer /> */}\n                        </Suspense>\n                    </div>\n                </> :\n                <>\n                    <Typography className={classes.commenText}>\n                        Oh ho! Please either allow your location or select your location to proceed\n                    </Typography>\n                    <Suspense>\n                        {/* <Footer /> */}\n                    </Suspense>\n                </>\n            }\n            <Suspense>\n                <BottomNavBar {...props} value={0} />\n            </Suspense>\n        </>\n    )\n}\n\nconst styles = {\n    cards: {\n        marginBottom: \"60px\",\n    }\n}\n\nexport default HomePage;","const APIKEY = \"AIzaSyBrtNUacoZ2l7VqPirFuWERg4iRVhwE15o\";\n\nexport default APIKEY;"],"sourceRoot":""}